{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,S,aAGAC,OAAOC,iBAAiB,QAAQ,SAACC,GAE7B,IAAMC,EAAc,sBAGdC,EAAW,CACbC,MAAOC,SAASC,cAAc,uBAC9BC,QAASF,SAASC,cAAc,4BAChCE,KAAMH,SAASC,cAAc,SAiCjC,SAASG,EAASC,GACdA,EAAEC,iBACF,IAAMP,EAAQD,EAASC,MAAMQ,MACvBL,EAAUJ,EAASI,QAAQK,OAE7BR,GAASG,KACTM,QAAQC,IAAI,UAA6BC,OAAnBX,EAAM,eAAqBW,OAARR,IAZ7CJ,EAASC,MAAMQ,MAAQ,GACvBT,EAASI,QAAQK,MAAQ,IACzB,EAAAf,EAAAmB,QAAOd,KAzBX,WACI,IACI,IAA2Be,GAAA,EAAApB,EAAAqB,MAAKhB,GAAxBE,EAAmBa,EAAnBb,MAAOG,EAAYU,EAAZV,QACfJ,EAASC,MAAMQ,MAAQR,EACvBD,EAASI,QAAQK,MAAQL,EAC3B,MAAOY,GACLN,QAAQC,IAAI,qBAKpBM,GA8BA,IAAMC,EAAYC,EAAAC,GAAEC,UAAS,YA1BzB,EAAA3B,EAAA4B,MAAKvB,EAAa,CACdE,MAAOD,EAASC,MAAMQ,MACtBL,QAASJ,EAASI,QAAQK,UAwBY,KAG9CT,EAASC,MAAMJ,iBAAiB,QAASqB,GACzClB,EAASI,QAAQP,iBAAiB,QAASqB,GAC3ClB,EAASK,KAAKR,iBAAiB,UAAU,SAACU,GACtCD,EAASC,S","sources":["src/js/03-feedback.js"],"sourcesContent":["import { load, save, remove } from \"./storage\";\nimport _ from \"lodash\";\n\nwindow.addEventListener(\"load\", (event) => {\n    // Name of field in the storage\n    const storageName = \"feedback-form-state\";\n\n    // Refs to elements\n    const elements = {\n        email: document.querySelector('input[name=\"email\"]'),\n        message: document.querySelector('textarea[name=\"message\"]'),\n        form: document.querySelector(\"form\"),\n    };\n\n    // Load saved data\n    function loadData() {\n        try {\n            const { email, message } = load(storageName);\n            elements.email.value = email;\n            elements.message.value = message;\n        } catch (error) {\n            console.log(\"Storage is empty\");\n        }\n    }\n\n    // Load\n    loadData();\n\n    // Save data on typing in the inputs\n    function onInput() {\n        save(storageName, {\n            email: elements.email.value,\n            message: elements.message.value,\n        });\n    }\n\n    // Clear all saved data from storage and clear fields\n    function clearStorage() {\n        elements.email.value = \"\";\n        elements.message.value = \"\";\n        remove(storageName);\n    }\n\n    // Post data\n    function postData(e) {\n        e.preventDefault();\n        const email = elements.email.value;\n        const message = elements.message.value;\n\n        if (email || message) {\n            console.log(`Email: ${email}, Message: ${message}`);\n            clearStorage();\n        }\n    }\n\n    // Throttle on typing\n    const throttled = _.throttle(() => onInput(), 500);\n\n    // Events\n    elements.email.addEventListener(\"input\", throttled);\n    elements.message.addEventListener(\"input\", throttled);\n    elements.form.addEventListener(\"submit\", (e) => {\n        postData(e);\n    });\n});\n"],"names":["$jzQFI","parcelRequire","window","addEventListener","event","storageName","elements","email","document","querySelector","message","form","postData","e","preventDefault","value","console","log","concat","remove","ref","load","error","loadData","throttled","$parcel$interopDefault","$1WSnx","throttle","save"],"version":3,"file":"03-feedback.be3125ae.js.map"}